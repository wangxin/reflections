When would you want to use a remote repository rather than keeping all your work
local?

    Fill in your answer here
Use a remote repository. As a backup. Accessible by others. Can collaborate.
Whever I need to backup it somewhere, make it public.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Fill in your answer here

If others are working on the same branch, pull automatically may get the changes
of others into the code I am currently working on. This could interferene with
what I am doing.
Sometimes, the changes on remote are not what I wanted.
Or new branches on remote are not what I wanted.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fill in your answer here

Fork: Clone a repository of others on GitHub
Clone: Clone repository from one place to another place. Could be on same or
different machines.
Branch: In a same repository, use branch to track new set of changes without
impacting the existing code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

So that the changes of remote can be checked and then I can decide whether to 
merge them with my local changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here
Perhaps I would using email. Definitely Git and tools like GitHub would be
easier. If I use email, I have to explain what I've changed. My peer would be
uneasy to figure out what I have changed. And all the interactions would remain 
in email thread.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
* Need to try something new
* Need to make a lot of change to code base
* Not sure about what I am going to change or add
* Need others to review my changes before merge into the master branch

If make changes to master branch directly, no back and forth overhead. The
changes will be in master and available to others as soon as I pushed back.