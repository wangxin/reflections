How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Fill in your answer here

Locate the change quickly.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Fill in your answer here

Know what has been changed. Can figure out the thoughs all the way. Help
reflection.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Fill in your answer here

Git - pros
More logical change sets.
Git - cons
Need extra effort

Google docs - pros
Never lose a change
Google docs - cons
Less logic change sets

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

Git more suitable for code change, development. One commit may need to change multiple files to introduce a logical changeset for adding feature/fixing bug. Google docs more suitable for documents.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

Use git log to check history of all commits. Use diff to see details of change between commits.

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Version control is a time machine. I can always go back to check what happened.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here

Track the changes and versions while writing code.

For software development. Track all the code changes.